{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _StyleSheet=_interopRequireDefault(require(\"../StyleSheet\"));var _View=_interopRequireDefault(require(\"../View\"));var _useMergeRefs=_interopRequireDefault(require(\"../../modules/useMergeRefs\"));function normalizeScrollEvent(e){return{nativeEvent:{contentOffset:{get x(){return e.target.scrollLeft;},get y(){return e.target.scrollTop;}},contentSize:{get height(){return e.target.scrollHeight;},get width(){return e.target.scrollWidth;}},layoutMeasurement:{get height(){return e.target.offsetHeight;},get width(){return e.target.offsetWidth;}}},timeStamp:Date.now()};}function shouldEmitScrollEvent(lastTick,eventThrottle){var timeSinceLastTick=Date.now()-lastTick;return eventThrottle>0&&timeSinceLastTick>=eventThrottle;}var ScrollViewBase=(0,React.forwardRef)(function(props,forwardedRef){var accessibilityLabel=props.accessibilityLabel,accessibilityRole=props.accessibilityRole,accessibilityState=props.accessibilityState,children=props.children,importantForAccessibility=props.importantForAccessibility,nativeID=props.nativeID,onLayout=props.onLayout,onScroll=props.onScroll,onTouchMove=props.onTouchMove,onWheel=props.onWheel,pointerEvents=props.pointerEvents,_props$scrollEnabled=props.scrollEnabled,scrollEnabled=_props$scrollEnabled===void 0?true:_props$scrollEnabled,_props$scrollEventThr=props.scrollEventThrottle,scrollEventThrottle=_props$scrollEventThr===void 0?0:_props$scrollEventThr,showsHorizontalScrollIndicator=props.showsHorizontalScrollIndicator,showsVerticalScrollIndicator=props.showsVerticalScrollIndicator,style=props.style,dataSet=props.dataSet,testID=props.testID;var scrollState=(0,React.useRef)({isScrolling:false,scrollLastTick:0});var scrollTimeout=(0,React.useRef)(null);var scrollRef=(0,React.useRef)(null);function createPreventableScrollHandler(handler){return function(e){if(scrollEnabled){if(handler){handler(e);}}};}function handleScroll(e){e.stopPropagation();if(e.target===scrollRef.current){e.persist();if(scrollTimeout.current!=null){clearTimeout(scrollTimeout.current);}scrollTimeout.current=setTimeout(function(){handleScrollEnd(e);},100);if(scrollState.current.isScrolling){if(shouldEmitScrollEvent(scrollState.current.scrollLastTick,scrollEventThrottle)){handleScrollTick(e);}}else{handleScrollStart(e);}}}function handleScrollStart(e){scrollState.current.isScrolling=true;handleScrollTick(e);}function handleScrollTick(e){scrollState.current.scrollLastTick=Date.now();if(onScroll){onScroll(normalizeScrollEvent(e));}}function handleScrollEnd(e){scrollState.current.isScrolling=false;if(onScroll){onScroll(normalizeScrollEvent(e));}}var hideScrollbar=showsHorizontalScrollIndicator===false||showsVerticalScrollIndicator===false;return React.createElement(_View.default,{accessibilityLabel:accessibilityLabel,accessibilityRole:accessibilityRole,accessibilityState:accessibilityState,children:children,dataSet:dataSet,importantForAccessibility:importantForAccessibility,nativeID:nativeID,onLayout:onLayout,onScroll:handleScroll,onTouchMove:createPreventableScrollHandler(onTouchMove),onWheel:createPreventableScrollHandler(onWheel),pointerEvents:pointerEvents,ref:(0,_useMergeRefs.default)(scrollRef,forwardedRef),style:[style,!scrollEnabled&&styles.scrollDisabled,hideScrollbar&&styles.hideScrollbar],testID:testID});});var styles=_StyleSheet.default.create({scrollDisabled:{overflowX:'hidden',overflowY:'hidden',touchAction:'none'},hideScrollbar:{scrollbarWidth:'none'}});var _default=ScrollViewBase;exports.default=_default;","map":{"version":3,"sources":["C:/Users/Omistaja/Desktop/AwesomeProject/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js"],"names":["normalizeScrollEvent","e","nativeEvent","contentOffset","x","target","scrollLeft","y","scrollTop","contentSize","height","scrollHeight","width","scrollWidth","layoutMeasurement","offsetHeight","offsetWidth","timeStamp","Date","now","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","ScrollViewBase","props","forwardedRef","accessibilityLabel","accessibilityRole","accessibilityState","children","importantForAccessibility","nativeID","onLayout","onScroll","onTouchMove","onWheel","pointerEvents","_props$scrollEnabled","scrollEnabled","_props$scrollEventThr","scrollEventThrottle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","style","dataSet","testID","scrollState","isScrolling","scrollLastTick","scrollTimeout","scrollRef","createPreventableScrollHandler","handler","handleScroll","stopPropagation","current","persist","clearTimeout","setTimeout","handleScrollEnd","handleScrollTick","handleScrollStart","hideScrollbar","React","createElement","View","ref","styles","scrollDisabled","StyleSheet","create","overflowX","overflowY","touchAction","scrollbarWidth"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport useMergeRefs from '../../modules/useMergeRefs';\n\nfunction normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n\n        get y() {\n          return e.target.scrollTop;\n        }\n\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n\n        get width() {\n          return e.target.scrollWidth;\n        }\n\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n\n        get width() {\n          return e.target.offsetWidth;\n        }\n\n      }\n    },\n    timeStamp: Date.now()\n  };\n}\n\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\n  var timeSinceLastTick = Date.now() - lastTick;\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n}\n/**\n * Encapsulates the Web-specific scroll throttling and disabling logic\n */\n\n\nvar ScrollViewBase = forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      accessibilityRole = props.accessibilityRole,\n      accessibilityState = props.accessibilityState,\n      children = props.children,\n      importantForAccessibility = props.importantForAccessibility,\n      nativeID = props.nativeID,\n      onLayout = props.onLayout,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onWheel = props.onWheel,\n      pointerEvents = props.pointerEvents,\n      _props$scrollEnabled = props.scrollEnabled,\n      scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n      _props$scrollEventThr = props.scrollEventThrottle,\n      scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\n      showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\n      showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\n      style = props.style,\n      dataSet = props.dataSet,\n      testID = props.testID;\n  var scrollState = useRef({\n    isScrolling: false,\n    scrollLastTick: 0\n  });\n  var scrollTimeout = useRef(null);\n  var scrollRef = useRef(null);\n\n  function createPreventableScrollHandler(handler) {\n    return function (e) {\n      if (scrollEnabled) {\n        if (handler) {\n          handler(e);\n        }\n      }\n    };\n  }\n\n  function handleScroll(e) {\n    e.stopPropagation();\n\n    if (e.target === scrollRef.current) {\n      e.persist(); // A scroll happened, so the scroll resets the scrollend timeout.\n\n      if (scrollTimeout.current != null) {\n        clearTimeout(scrollTimeout.current);\n      }\n\n      scrollTimeout.current = setTimeout(function () {\n        handleScrollEnd(e);\n      }, 100);\n\n      if (scrollState.current.isScrolling) {\n        // Scroll last tick may have changed, check if we need to notify\n        if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\n          handleScrollTick(e);\n        }\n      } else {\n        // Weren't scrolling, so we must have just started\n        handleScrollStart(e);\n      }\n    }\n  }\n\n  function handleScrollStart(e) {\n    scrollState.current.isScrolling = true;\n    handleScrollTick(e);\n  }\n\n  function handleScrollTick(e) {\n    scrollState.current.scrollLastTick = Date.now();\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  function handleScrollEnd(e) {\n    scrollState.current.isScrolling = false;\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\n  return React.createElement(View, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: accessibilityRole,\n    accessibilityState: accessibilityState,\n    children: children,\n    dataSet: dataSet,\n    importantForAccessibility: importantForAccessibility,\n    nativeID: nativeID,\n    onLayout: onLayout,\n    onScroll: handleScroll,\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\n    onWheel: createPreventableScrollHandler(onWheel),\n    pointerEvents: pointerEvents,\n    ref: useMergeRefs(scrollRef, forwardedRef),\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar],\n    testID: testID\n  });\n}); // Chrome doesn't support e.preventDefault in this case; touch-action must be\n// used to disable scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    touchAction: 'none'\n  },\n  hideScrollbar: {\n    scrollbarWidth: 'none'\n  }\n});\nexport default ScrollViewBase;"]},"metadata":{},"sourceType":"script"}